@model ViewModel.TenantViewModel

@{
    ViewBag.Title = "Edit";
}

<h2>Edit</h2>


@using (Html.BeginForm()) {
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true)

    <fieldset class="form-horizontal">
        <legend>Tenant</legend>

        @Html.HiddenFor(model => model.TenantId)
        
        <!-- optimistic concurrency -->
        @Html.HiddenFor(model => model.RowVersion)

        <div class="control-group">
            @Html.LabelFor(model => model.Name, new { @class = "control-label" })
            <div class="controls">
                @Html.EditorFor(model => model.Name)
                @Html.ValidationMessageFor(model => model.Name, null, new { @class = "help-inline" })
            </div>
        </div>

        @*<div class="control-group">
            @Html.LabelFor(model => model.AccountNumber, new { @class = "control-label" })
            <div class="controls">
                @Html.EditorFor(model => model.AccountNumber)
                @Html.ValidationMessageFor(model => model.AccountNumber, null, new { @class = "help-inline" })
            </div>
        </div>*@
            
        <div class="control-group">
            @Html.LabelFor(model => model.Active, new { @class = "control-label" })
            <div class="controls">
                @Html.EditorFor(model => model.Active)
                @Html.ValidationMessageFor(model => model.Active, null, new { @class = "help-inline" })
            </div>
        </div>

        <div class="control-group">
            @Html.LabelFor(model => model.PrimaryContactFirstName, new { @class = "control-label" })
            <div class="controls">
                @Html.EditorFor(model => model.PrimaryContactFirstName)
                @Html.ValidationMessageFor(model => model.PrimaryContactFirstName, null, new { @class = "help-inline" })
            </div>
        </div>

        <div class="control-group">
            @Html.LabelFor(model => model.PrimaryContactLastName, new { @class = "control-label" })
            <div class="controls">
                @Html.EditorFor(model => model.PrimaryContactLastName)
                @Html.ValidationMessageFor(model => model.PrimaryContactLastName, null, new { @class = "help-inline" })
            </div>
        </div>
        
        @Html.HiddenFor(model => model.PrimaryContactPhone)
        <div class="control-group">
            @Html.LabelFor(model => model.PrimaryContactPhone, new { @class = "control-label" })
            <div class="controls">
                @Html.EditorFor(model => model.PrimaryContactPhone)
                @Html.ValidationMessageFor(model => model.PrimaryContactPhone, null, new { @class = "help-inline" })
            </div>
        </div>

        <div class="control-group">
            @Html.LabelFor(model => model.Description, new { @class = "control-label" })
            <div class="controls">
                @Html.EditorFor(model => model.Description)
                @Html.ValidationMessageFor(model => model.Description, null, new { @class = "help-inline" })
            </div>
        </div>

        <div class="control-group">
            @Html.LabelFor(model => model.Email, new { @class = "control-label" })
            <div class="controls">
                @Html.EditorFor(model => model.Email)
                @Html.ValidationMessageFor(model => model.Email, null, new { @class = "help-inline" })
            </div>
        </div>

        @Html.HiddenFor(model => model.OfficePhone)

        <div class="control-group">
            @Html.LabelFor(model => model.Street, new { @class = "control-label" })
            <div class="controls">
                @Html.EditorFor(model => model.Street)
                @Html.ValidationMessageFor(model => model.Street, null, new { @class = "help-inline" })
            </div>
        </div>

        <div class="control-group">
            @Html.LabelFor(model => model.City, new { @class = "control-label" })
            <div class="controls">
                @Html.EditorFor(model => model.City)
                @Html.ValidationMessageFor(model => model.City, null, new { @class = "help-inline" })
            </div>
        </div>

        <div class="control-group">
            @Html.LabelFor(model => model.State, new { @class = "control-label" })
            <div class="controls">
                @Html.EditorFor(model => model.State)
                @Html.ValidationMessageFor(model => model.State, null, new { @class = "help-inline" })
            </div>
        </div>

        <div class="control-group">
            @Html.LabelFor(model => model.Zip, new { @class = "control-label" })
            <div class="controls">
                @Html.EditorFor(model => model.Zip)
                @Html.ValidationMessageFor(model => model.Zip, null, new { @class = "help-inline" })
            </div>
        </div>

        @Html.HiddenFor(model => model.RowGuid)

        @Html.HiddenFor(model => model.ContactTypeId)

        <div class="form-actions no-color">
            <input type="submit" value="Save" class="btn" />
        </div>
    </fieldset>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}

